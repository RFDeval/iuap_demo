<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/cache  http://www.springframework.org/schema/cache/spring-cache-4.0.xsd"	
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/application.properties</value>
				<value>classpath*:/busilog-systemConfig.properties</value>
				<value>classpath*:/redis-config.properties</value>
			</list>
		</property>
		<property name="systemPropertiesMode" value="2"></property>
	</bean>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan
		base-package="reviewtest,com.yonyou.iuap,uap.iweb,com.yonyou.metadata.mybatis.service,com.yonyou.metadata.caches.redis,iuap.uitemplate,com.yonyou.iuap,uap.iweb,com.yonyou.metadata.mybatis.service,com.yonyou.metadata.caches.redis">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!-- 多语 -->
	<bean id="applicationContextUtil" class="com.yonyou.iuap.i18n.ApplicationContextUtil" lazy-init="false"/>

	<!-- 定义不同的日志、提示等信息的资源加载 -->
	<bean id="messageSource"
		  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<!-- 生产上最好设置时间长一点，单位S -->
		<property name="cacheSeconds" value="10"></property>
		<!-- 将日志、提示信息分开 -->
		<property name="basenames">
			<list>
				<value>/WEB-INF/i18n/iuap</value>
				<!-- <value>/WEB-INF/i18n/logs</value> -->
			</list>
		</property>
	</bean>

	<!-- 异步线程池   -->
	<bean id="threadPoolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="${threadPool.corePoolSize}" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="${threadPool.maxPoolSize}" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="${threadPool.queueCapacity}" />
		<property name="keepAliveSeconds" value="${threadPool.keepAliveSeconds}" />
		<!-- 线程池维护线程所允许的空闲时间 
		线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="${threadPool.rejectedExecutionHandler}" />
		</property>
	</bean>
	
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean>
      
    <!-- SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>  
            </props>  
        </property>  
    </bean>
    
    <!-- druid spring monitor setting -->
    <bean id="druid-stat-interceptor"	class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>

	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"  scope="prototype">
		<property name="patterns">
			<list>
				<value>com.yonyou.*.service.*</value>
				<value>com.yonyou.*.web.*</value>
			</list>
		</property>
	</bean>
	
	<!-- <aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" 	pointcut-ref="druid-stat-pointcut" />
	</aop:config> -->
    
</beans>